{"mappings":"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","sources":["src/index.ts","src/factory.ts","src/Web3ProviderBackend.ts","src/errors.ts","src/EventEmitter.ts","src/playwright.ts","src/utils.ts"],"sourcesContent":["export { makeHeadlessWeb3Provider } from './factory'\nexport { injectHeadlessWeb3Provider } from './playwright'\nexport type { IWeb3Provider } from './types'\nexport { Web3RequestKind } from './utils'\nexport { Web3ProviderBackend } from './Web3ProviderBackend'\n","import { ethers } from 'ethers'\nimport { IWeb3Provider } from './types'\nimport { EventEmitter } from './EventEmitter'\nimport { Web3ProviderBackend, Web3ProviderConfig } from './Web3ProviderBackend'\n\ntype Fn = (...args: any[]) => any\n\nexport function makeHeadlessWeb3Provider(\n  privateKeys: string[],\n  chainId: number,\n  rpcUrl: string,\n  evaluate: <T extends keyof IWeb3Provider>(\n    method: T,\n    ...args: IWeb3Provider[T] extends Fn ? Parameters<IWeb3Provider[T]> : []\n  ) => Promise<void> = async () => {},\n  config?: Web3ProviderConfig \n) {\n  const chainRpc = new ethers.providers.JsonRpcProvider(rpcUrl, chainId)\n  const web3Provider = new Web3ProviderBackend(privateKeys, [\n    { chainId, rpcUrl },\n  ], config)\n\n  relayEvents(web3Provider, evaluate)\n\n  return web3Provider\n}\n\nfunction relayEvents(\n  eventEmitter: EventEmitter,\n  execute: <T extends keyof IWeb3Provider>(\n    method: T,\n    ...args: IWeb3Provider[T] extends Fn ? Parameters<IWeb3Provider[T]> : []\n  ) => Promise<void>\n): void {\n  const emit_ = eventEmitter.emit\n  eventEmitter.emit = (eventName, ...args) => {\n    void execute('emit', eventName, ...args)\n    return emit_.apply(eventEmitter, [eventName, ...args])\n  }\n}\n","import {\n  filter,\n  firstValueFrom,\n  BehaviorSubject,\n  switchMap,\n  from,\n  first,\n  tap,\n} from 'rxjs'\nimport { ethers } from 'ethers'\nimport assert from 'assert/strict'\n\nimport { Web3RequestKind } from './utils'\nimport {\n  ChainDisconnected,\n  Deny,\n  Disconnected,\n  ErrorWithCode,\n  Unauthorized,\n  UnsupportedMethod,\n} from './errors'\nimport { IWeb3Provider, PendingRequest } from './types'\nimport { EventEmitter } from './EventEmitter'\nimport { toUtf8String } from 'ethers/lib/utils'\n\ninterface ChainConnection {\n  chainId: number\n  rpcUrl: string\n}\n\nexport interface Web3ProviderConfig {\n  debug?: boolean\n  logger?: typeof console.log\n}\n\nexport class Web3ProviderBackend extends EventEmitter implements IWeb3Provider {\n  #pendingRequests$ = new BehaviorSubject<PendingRequest[]>([])\n  #wallets: ethers.Signer[] = []\n  private _activeChainId: number\n  private _rpc: Record<number, ethers.providers.JsonRpcProvider> = {}\n  private _config: { debug: boolean; logger: typeof console.log }\n  private _authorizedRequests: { [K in Web3RequestKind | string]?: boolean } =\n    {}\n\n  constructor(\n    privateKeys: string[],\n    private readonly chains: ChainConnection[],\n    config: Web3ProviderConfig = {}\n  ) {\n    super()\n    this.#wallets = privateKeys.map((key) => new ethers.Wallet(key))\n    this._activeChainId = chains[0].chainId\n    this._config = Object.assign({ debug: false, logger: console.log }, config)\n  }\n\n  request(args: { method: 'eth_accounts'; params: [] }): Promise<string[]>\n  request(args: {\n    method: 'eth_requestAccounts'\n    params: string[]\n  }): Promise<string[]>\n  request(args: { method: 'net_version'; params: [] }): Promise<number>\n  request(args: { method: 'eth_chainId'; params: [] }): Promise<string>\n  request(args: { method: 'personal_sign'; params: string[] }): Promise<string>\n  async request({\n    method,\n    params,\n  }: {\n    method: string\n    params: any[]\n  }): Promise<any> {\n    if (this._config.debug) {\n      this._config.logger({ method, params })\n    }\n\n    switch (method) {\n      case 'eth_call':\n      case 'eth_estimateGas':\n      case 'eth_gasPrice':\n      case 'eth_blockNumber':\n      case 'eth_getBlockByNumber':\n      case 'eth_getTransactionByHash':\n      case 'eth_getTransactionReceipt':\n      case 'evm_increaseTime':\n      case 'evm_mine':\n        return this.getRpc().send(method, params)\n\n      case 'eth_requestAccounts':\n      case 'eth_accounts':\n        return this.waitAuthorization(\n          { method, params },\n          async () => {\n            const { chainId } = this.getCurrentChain()\n            this.emit('connect', { chainId })\n            return Promise.all(\n              this.#wallets.map((wallet) => wallet.getAddress())\n            )\n          },\n          true,\n          'eth_requestAccounts'\n        )\n\n      case 'eth_chainId': {\n        const { chainId } = this.getCurrentChain()\n        return '0x' + chainId.toString(16)\n      }\n\n      case 'net_version': {\n        const { chainId } = this.getCurrentChain()\n        return chainId\n      }\n\n      case 'eth_sendTransaction': {\n        return this.waitAuthorization({ method, params }, async () => {\n          const wallet = this.#getCurrentWallet()\n          const rpc = this.getRpc()\n          const { gas, ...txRequest } = params[0]\n          const tx = await wallet.connect(rpc).sendTransaction(txRequest)\n          return tx.hash\n        })\n      }\n\n      case 'wallet_addEthereumChain': {\n        return this.waitAuthorization({ method, params }, async () => {\n          const chainId = Number(params[0].chainId)\n          const rpcUrl = params[0].rpcUrls[0]\n          this.addNetwork(chainId, rpcUrl)\n          return null\n        })\n      }\n\n      case 'wallet_switchEthereumChain': {\n        if (this._activeChainId === Number(params[0].chainId)) {\n          return null\n        }\n        return this.waitAuthorization({ method, params }, async () => {\n          const chainId = Number(params[0].chainId)\n          this.switchNetwork(chainId)\n          return null\n        })\n      }\n\n      case 'personal_sign': {\n        return this.waitAuthorization({ method, params }, async () => {\n          const wallet = this.#getCurrentWallet()\n          const address = await wallet.getAddress()\n          assert.equal(address, ethers.utils.getAddress(params[1]))\n          const message = toUtf8String(params[0])\n\n          const signature = await wallet.signMessage(message)\n          if (this._config.debug) {\n            this._config.logger('personal_sign', {\n              message,\n              signature,\n            })\n          }\n\n          return signature\n        })\n      }\n\n      default:\n        throw UnsupportedMethod()\n    }\n  }\n\n  #getCurrentWallet(): ethers.Signer {\n    const wallet = this.#wallets[0]\n\n    if (wallet == null) {\n      throw Unauthorized()\n    }\n\n    return wallet\n  }\n\n  waitAuthorization<T>(\n    requestInfo: PendingRequest['requestInfo'],\n    task: () => Promise<T>,\n    permanentPermission = false,\n    methodOverride?: string\n  ) {\n    const method = methodOverride ?? requestInfo.method\n\n    if (this._authorizedRequests[method]) {\n      return task()\n    }\n\n    return new Promise((resolve, reject) => {\n      const pendingRequest: PendingRequest = {\n        requestInfo: requestInfo,\n        authorize: async () => {\n          if (permanentPermission) {\n            this._authorizedRequests[method] = true\n          }\n\n          resolve(await task())\n        },\n        reject(err) {\n          reject(err)\n        },\n      }\n\n      this.#pendingRequests$.next(\n        this.#pendingRequests$.getValue().concat(pendingRequest)\n      )\n    })\n  }\n\n  private consumeRequest(requestKind: Web3RequestKind) {\n    return firstValueFrom(\n      this.#pendingRequests$.pipe(\n        switchMap((a) => from(a)),\n        filter((request) => {\n          return request.requestInfo.method === requestKind\n        }),\n        first(),\n        tap((item) => {\n          this.#pendingRequests$.next(\n            without(this.#pendingRequests$.getValue(), item)\n          )\n        })\n      )\n    )\n  }\n\n  private consumeAllRequests() {\n    const a = this.#pendingRequests$.getValue()\n    this.#pendingRequests$.next([])\n    return a\n  }\n\n  getPendingRequests(): PendingRequest['requestInfo'][] {\n    return this.#pendingRequests$.getValue().map((r) => r.requestInfo)\n  }\n\n  getPendingRequestCount(requestKind?: Web3RequestKind): number {\n    const pendingRequests = this.#pendingRequests$.getValue()\n    if (requestKind == null) {\n      return pendingRequests.length\n    }\n\n    return pendingRequests.filter(\n      (request) => request.requestInfo.method === requestKind\n    ).length\n  }\n\n  async authorize(requestKind: Web3RequestKind): Promise<void> {\n    const pendingRequest = await this.consumeRequest(requestKind)\n    return pendingRequest.authorize()\n  }\n\n  async reject(\n    requestKind: Web3RequestKind,\n    reason: ErrorWithCode = Deny()\n  ): Promise<void> {\n    const pendingRequest = await this.consumeRequest(requestKind)\n    return pendingRequest.reject(reason)\n  }\n\n  authorizeAll(): void {\n    this.consumeAllRequests().forEach((request) => request.authorize())\n  }\n\n  rejectAll(reason: ErrorWithCode = Deny()): void {\n    this.consumeAllRequests().forEach((request) => request.reject(reason))\n  }\n\n  async changeAccounts(privateKeys: string[]): Promise<void> {\n    this.#wallets = privateKeys.map((key) => new ethers.Wallet(key))\n    this.emit(\n      'accountsChanged',\n      await Promise.all(this.#wallets.map((wallet) => wallet.getAddress()))\n    )\n  }\n\n  private getCurrentChain(): ChainConnection {\n    const chainConn = this.chains.find(\n      ({ chainId }) => chainId === this._activeChainId\n    )\n    if (!chainConn) {\n      throw Disconnected()\n    }\n    return chainConn\n  }\n\n  private getRpc(): ethers.providers.JsonRpcProvider {\n    const chain = this.getCurrentChain()\n    let rpc = this._rpc[chain.chainId]\n\n    if (!rpc) {\n      rpc = new ethers.providers.JsonRpcProvider(chain.rpcUrl, chain.chainId)\n      this._rpc[chain.chainId] = this._rpc[chain.chainId]\n    }\n\n    return rpc\n  }\n\n  getNetwork(): ChainConnection {\n    return this.getCurrentChain()\n  }\n\n  getNetworks(): ChainConnection[] {\n    return this.chains\n  }\n\n  addNetwork(chainId: number, rpcUrl: string): void {\n    this.chains.push({ chainId, rpcUrl })\n  }\n\n  switchNetwork(chainId_: number): void {\n    const chainConn = this.chains.findIndex(\n      ({ chainId }) => chainId === chainId_\n    )\n    if (!~chainConn) {\n      throw ChainDisconnected()\n    }\n    this._activeChainId = chainId_\n    this.emit('chainChanged', chainId_)\n  }\n\n  // async getGasPrice(): Promise<ethers.BigNumber> {\n  //   return ethers.BigNumber.from('0x3b9aec9e')\n  // }\n}\n\nfunction without<T>(list: T[], item: T): T[] {\n  const idx = list.indexOf(item)\n  if (~idx) {\n    return list.slice(0, idx).concat(list.slice(idx + 1))\n  }\n  return list\n}\n","export const Deny = (): ErrorWithCode =>\n  new ErrorWithCode('The user rejected the request.', 4001)\n\nexport const Unauthorized = (): ErrorWithCode =>\n  new ErrorWithCode(\n    'The requested method and/or account has not been authorized by the user.',\n    4100\n  )\n\nexport const UnsupportedMethod = (): ErrorWithCode =>\n  new ErrorWithCode('The Provider does not support the requested method.', 4200)\n\nexport const Disconnected = (): ErrorWithCode =>\n  new ErrorWithCode('The Provider is disconnected from all chains.', 4900)\n\nexport const ChainDisconnected = (): ErrorWithCode =>\n  new ErrorWithCode(\n    'The Provider is not connected to the requested chain.',\n    4901\n  )\n\nexport class ErrorWithCode extends Error {\n  constructor(message?: string, public code?: number) {\n    super(message)\n    return this\n  }\n}\n","export class EventEmitter {\n  private readonly listeners: Record<string, Array<(...args: any[]) => void>> =\n    Object.create(null)\n\n  emit(eventName: string, ...args: any[]): boolean {\n    this.listeners[eventName]?.forEach((listener) => {\n      listener(...args)\n    })\n    return true\n  }\n\n  on(eventName: string, listener: (...args: any[]) => void): this {\n    this.listeners[eventName] ??= []\n    this.listeners[eventName]?.push(listener)\n    return this\n  }\n\n  off(eventName: string, listener: (...args: any[]) => void): this {\n    const listeners = this.listeners[eventName] ?? []\n\n    for (const [i, listener_] of listeners.entries()) {\n      if (listener === listener_) {\n        listeners.splice(i, 1)\n        break\n      }\n    }\n\n    return this\n  }\n\n  once(eventName: string, listener: (...args: any[]) => void): this {\n    const cb = (...args: any[]): void => {\n      this.off(eventName, cb)\n      listener(...args)\n    }\n\n    return this.on(eventName, cb)\n  }\n}\n","import type { Page } from '@playwright/test'\nimport { makeHeadlessWeb3Provider } from './factory'\nimport { IWeb3Provider } from './types'\nimport { Web3ProviderConfig } from './Web3ProviderBackend'\n\ntype Fn = (...args: any[]) => any\n\ndeclare global {\n  interface Window {\n    ethereum: IWeb3Provider\n  }\n}\n\nexport async function injectHeadlessWeb3Provider(\n  page: Page,\n  privateKeys: string[],\n  chainId: number,\n  chainRpcUrl: string,\n  config?: Web3ProviderConfig\n) {\n  const evaluate = async <T extends keyof IWeb3Provider>(\n    method: T,\n    ...args: IWeb3Provider[T] extends Fn ? Parameters<IWeb3Provider[T]> : []\n  ) => {\n    return page.evaluate(\n      ([method, args]) => {\n        const ethereum = window.ethereum\n        const fn = ethereum[method]\n        if (typeof fn == 'function') {\n          // @ts-ignore\n          return fn.apply(ethereum, args)\n        }\n        return ethereum[method]\n      },\n      [method, args] as const\n    )\n  }\n\n  const web3Provider = makeHeadlessWeb3Provider(\n    privateKeys,\n    chainId,\n    chainRpcUrl,\n    evaluate,\n    config\n  )\n\n  await page.exposeFunction(\n    '__injectedHeadlessWeb3ProviderRequest',\n    <T extends keyof IWeb3Provider>(\n      method: T,\n      ...args: IWeb3Provider[T] extends Fn ? Parameters<IWeb3Provider[T]> : []\n    ) =>\n      // @ts-expect-error\n      web3Provider[method](...args)\n  )\n\n  await page.addInitScript(() => {\n    class EventEmitter {\n      private readonly listeners: Record<\n        string,\n        Array<(...args: any[]) => void>\n      > = Object.create(null)\n\n      emit(eventName: string, ...args: any[]): boolean {\n        this.listeners[eventName]?.forEach((listener) => {\n          listener(...args)\n        })\n        return true\n      }\n\n      on(eventName: string, listener: (...args: any[]) => void): this {\n        this.listeners[eventName] ??= []\n        this.listeners[eventName]?.push(listener)\n        return this\n      }\n\n      off(eventName: string, listener: (...args: any[]) => void): this {\n        const listeners = this.listeners[eventName] ?? []\n\n        for (const [i, listener_] of listeners.entries()) {\n          if (listener === listener_) {\n            listeners.splice(i, 1)\n            break\n          }\n        }\n\n        return this\n      }\n\n      once(eventName: string, listener: (...args: any[]) => void): this {\n        const cb = (...args: any[]): void => {\n          this.off(eventName, cb)\n          listener(...args)\n        }\n\n        return this.on(eventName, cb)\n      }\n    }\n\n    const proxyableMethods = ['request']\n\n    // @ts-expect-error\n    window.ethereum = new Proxy(new EventEmitter(), {\n      get(target: EventEmitter, prop: string): any {\n        if (proxyableMethods.includes(prop)) {\n          return (...args: any[]) => {\n            // @ts-expect-error\n            return window.__injectedHeadlessWeb3ProviderRequest(prop, ...args)\n          }\n        }\n\n        // @ts-expect-error\n        return Reflect.get(...arguments)\n      },\n    })\n  })\n\n  return web3Provider\n}\n","export enum Web3RequestKind {\n  RequestAccounts = 'eth_requestAccounts',\n  Accounts = 'eth_accounts',\n  SendTransaction = 'eth_sendTransaction',\n  SwitchEthereumChain = 'wallet_switchEthereumChain',\n  AddEthereumChain = 'wallet_addEthereumChain',\n  SignMessage = 'personal_sign',\n}\n"],"names":[],"version":3,"file":"main.cjs.map"}